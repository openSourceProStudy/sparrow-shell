2023-05-21 23:54:58.724 TRACE_ID DEBUG main Generator4MethodAccessor package com.sparrow.accessMethod;
import com.sparrow.cg.MethodAccessor;
import java.util.HashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;

 public class HelloEventMethodAccess  implements MethodAccessor{
private static Map<String, BiFunction<com.sparrow.rocketmq.protocol.event.HelloEvent, String, Object>> getMap = new HashMap<>();
        private static Map<String, BiConsumer<com.sparrow.rocketmq.protocol.event.HelloEvent, Object>> setMap = new HashMap<>();

static {

getMap.put("message", (o, r) -> o.getMessage());


setMap.put("message", (o, arg) -> o.setMessage((java.lang.String) arg));

}
public Object get(Object o, String methodName){
com.sparrow.rocketmq.protocol.event.HelloEvent helloEvent=(com.sparrow.rocketmq.protocol.event.HelloEvent)o;return getMap.get(methodName).apply(helloEvent,methodName);}
public void set(Object o, String methodName,Object arg){
com.sparrow.rocketmq.protocol.event.HelloEvent helloEvent=(com.sparrow.rocketmq.protocol.event.HelloEvent)o;
 setMap.get(methodName).accept(helloEvent,arg);}
}
2023-05-21 23:54:59.954 TRACE_ID DEBUG main Generator4MethodAccessor package com.sparrow.accessMethod;
import com.sparrow.cg.MethodAccessor;
import java.util.HashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;

 public class SourceMethodAccess  implements MethodAccessor{
private static Map<String, BiFunction<com.sparrow.facade.beans.Source, String, Object>> getMap = new HashMap<>();
        private static Map<String, BiConsumer<com.sparrow.facade.beans.Source, Object>> setMap = new HashMap<>();

static {

getMap.put("userId", (o, r) -> o.getUserId());

getMap.put("birthday", (o, r) -> o.getBirthday());

getMap.put("age", (o, r) -> o.getAge());

getMap.put("sb", (o, r) -> o.getSb());

getMap.put("money", (o, r) -> o.getMoney());

getMap.put("name", (o, r) -> o.getName());


setMap.put("userId", (o, arg) -> o.setUserId((java.lang.Long) arg));

setMap.put("birthday", (o, arg) -> o.setBirthday((java.util.Date) arg));

setMap.put("age", (o, arg) -> o.setAge((java.lang.Integer) arg));

setMap.put("sb", (o, arg) -> o.setSb((java.lang.Boolean) arg));

setMap.put("money", (o, arg) -> o.setMoney((java.math.BigDecimal) arg));

setMap.put("name", (o, arg) -> o.setName((java.lang.String) arg));

}
public Object get(Object o, String methodName){
com.sparrow.facade.beans.Source source=(com.sparrow.facade.beans.Source)o;return getMap.get(methodName).apply(source,methodName);}
public void set(Object o, String methodName,Object arg){
com.sparrow.facade.beans.Source source=(com.sparrow.facade.beans.Source)o;
 setMap.get(methodName).accept(source,arg);}
}
2023-05-21 23:55:00.521 TRACE_ID DEBUG main Generator4MethodAccessor package com.sparrow.accessMethod;
import com.sparrow.cg.MethodAccessor;
import java.util.HashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;

 public class TargetMethodAccess  implements MethodAccessor{
private static Map<String, BiFunction<com.sparrow.facade.beans.Target, String, Object>> getMap = new HashMap<>();
        private static Map<String, BiConsumer<com.sparrow.facade.beans.Target, Object>> setMap = new HashMap<>();

static {

getMap.put("userId", (o, r) -> o.getUserId());

getMap.put("birthday", (o, r) -> o.getBirthday());

getMap.put("age", (o, r) -> o.getAge());

getMap.put("sb", (o, r) -> o.getSb());

getMap.put("money", (o, r) -> o.getMoney());

getMap.put("name", (o, r) -> o.getName());


setMap.put("userId", (o, arg) -> o.setUserId((java.lang.Long) arg));

setMap.put("birthday", (o, arg) -> o.setBirthday((java.util.Date) arg));

setMap.put("age", (o, arg) -> o.setAge((java.lang.Integer) arg));

setMap.put("sb", (o, arg) -> o.setSb((java.lang.Boolean) arg));

setMap.put("money", (o, arg) -> o.setMoney((java.math.BigDecimal) arg));

setMap.put("name", (o, arg) -> o.setName((java.lang.String) arg));

}
public Object get(Object o, String methodName){
com.sparrow.facade.beans.Target target=(com.sparrow.facade.beans.Target)o;return getMap.get(methodName).apply(target,methodName);}
public void set(Object o, String methodName,Object arg){
com.sparrow.facade.beans.Target target=(com.sparrow.facade.beans.Target)o;
 setMap.get(methodName).accept(target,arg);}
}
2023-05-21 23:55:00.894 TRACE_ID DEBUG main Generator4MethodAccessor package com.sparrow.accessMethod;
import com.sparrow.cg.MethodAccessor;
import java.util.HashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;

 public class UserMethodAccess  implements MethodAccessor{
private static Map<String, BiFunction<com.sparrow.json.User, String, Object>> getMap = new HashMap<>();
        private static Map<String, BiConsumer<com.sparrow.json.User, Object>> setMap = new HashMap<>();

static {

getMap.put("extend", (o, r) -> o.getExtend());

getMap.put("userId", (o, r) -> o.getUserId());

getMap.put("parent", (o, r) -> o.getParent());

getMap.put("userName", (o, r) -> o.getUserName());


setMap.put("userName", (o, arg) -> o.setUserName((java.lang.String) arg));

setMap.put("extend", (o, arg) -> o.setExtend((java.util.Map) arg));

setMap.put("userId", (o, arg) -> o.setUserId((java.lang.String) arg));

setMap.put("parent", (o, arg) -> o.setParent((com.sparrow.json.User) arg));

}
public Object get(Object o, String methodName){
com.sparrow.json.User user=(com.sparrow.json.User)o;return getMap.get(methodName).apply(user,methodName);}
public void set(Object o, String methodName,Object arg){
com.sparrow.json.User user=(com.sparrow.json.User)o;
 setMap.get(methodName).accept(user,arg);}
}
2023-05-21 23:55:02.999 TRACE_ID DEBUG main Generator4MethodAccessor package com.sparrow.accessMethod;
import com.sparrow.cg.MethodAccessor;
import java.util.HashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;

 public class User3MethodAccess  implements MethodAccessor{
private static Map<String, BiFunction<com.sparrow.cg.User3, String, Object>> getMap = new HashMap<>();
        private static Map<String, BiConsumer<com.sparrow.cg.User3, Object>> setMap = new HashMap<>();

static {

getMap.put("user", (o, r) -> o.getUser());


setMap.put("user", (o, arg) -> o.setUser((java.lang.String) arg));

}
public Object get(Object o, String methodName){
com.sparrow.cg.User3 user3=(com.sparrow.cg.User3)o;return getMap.get(methodName).apply(user3,methodName);}
public void set(Object o, String methodName,Object arg){
com.sparrow.cg.User3 user3=(com.sparrow.cg.User3)o;
 setMap.get(methodName).accept(user3,arg);}
}
2023-06-17 22:42:43.645 TRACE_ID DEBUG main Generator4MethodAccessor package com.sparrow.accessMethod;
import com.sparrow.cg.MethodAccessor;
import java.util.HashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;

 public class HelloEventMethodAccess  implements MethodAccessor{
private static Map<String, BiFunction<com.sparrow.rocketmq.protocol.event.HelloEvent, String, Object>> getMap = new HashMap<>();
        private static Map<String, BiConsumer<com.sparrow.rocketmq.protocol.event.HelloEvent, Object>> setMap = new HashMap<>();

static {

getMap.put("message", (o, r) -> o.getMessage());


setMap.put("message", (o, arg) -> o.setMessage((java.lang.String) arg));

}
public Object get(Object o, String methodName){
com.sparrow.rocketmq.protocol.event.HelloEvent helloEvent=(com.sparrow.rocketmq.protocol.event.HelloEvent)o;return getMap.get(methodName).apply(helloEvent,methodName);}
public void set(Object o, String methodName,Object arg){
com.sparrow.rocketmq.protocol.event.HelloEvent helloEvent=(com.sparrow.rocketmq.protocol.event.HelloEvent)o;
 setMap.get(methodName).accept(helloEvent,arg);}
}
2023-06-17 22:42:45.156 TRACE_ID DEBUG main Generator4MethodAccessor package com.sparrow.accessMethod;
import com.sparrow.cg.MethodAccessor;
import java.util.HashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;

 public class SourceMethodAccess  implements MethodAccessor{
private static Map<String, BiFunction<com.sparrow.facade.beans.Source, String, Object>> getMap = new HashMap<>();
        private static Map<String, BiConsumer<com.sparrow.facade.beans.Source, Object>> setMap = new HashMap<>();

static {

getMap.put("age", (o, r) -> o.getAge());

getMap.put("sb", (o, r) -> o.getSb());

getMap.put("money", (o, r) -> o.getMoney());

getMap.put("userId", (o, r) -> o.getUserId());

getMap.put("birthday", (o, r) -> o.getBirthday());

getMap.put("name", (o, r) -> o.getName());


setMap.put("age", (o, arg) -> o.setAge((java.lang.Integer) arg));

setMap.put("sb", (o, arg) -> o.setSb((java.lang.Boolean) arg));

setMap.put("money", (o, arg) -> o.setMoney((java.math.BigDecimal) arg));

setMap.put("userId", (o, arg) -> o.setUserId((java.lang.Long) arg));

setMap.put("birthday", (o, arg) -> o.setBirthday((java.util.Date) arg));

setMap.put("name", (o, arg) -> o.setName((java.lang.String) arg));

}
public Object get(Object o, String methodName){
com.sparrow.facade.beans.Source source=(com.sparrow.facade.beans.Source)o;return getMap.get(methodName).apply(source,methodName);}
public void set(Object o, String methodName,Object arg){
com.sparrow.facade.beans.Source source=(com.sparrow.facade.beans.Source)o;
 setMap.get(methodName).accept(source,arg);}
}
2023-06-17 22:42:45.868 TRACE_ID DEBUG main Generator4MethodAccessor package com.sparrow.accessMethod;
import com.sparrow.cg.MethodAccessor;
import java.util.HashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;

 public class TargetMethodAccess  implements MethodAccessor{
private static Map<String, BiFunction<com.sparrow.facade.beans.Target, String, Object>> getMap = new HashMap<>();
        private static Map<String, BiConsumer<com.sparrow.facade.beans.Target, Object>> setMap = new HashMap<>();

static {

getMap.put("age", (o, r) -> o.getAge());

getMap.put("sb", (o, r) -> o.getSb());

getMap.put("money", (o, r) -> o.getMoney());

getMap.put("userId", (o, r) -> o.getUserId());

getMap.put("birthday", (o, r) -> o.getBirthday());

getMap.put("name", (o, r) -> o.getName());


setMap.put("age", (o, arg) -> o.setAge((java.lang.Integer) arg));

setMap.put("sb", (o, arg) -> o.setSb((java.lang.Boolean) arg));

setMap.put("money", (o, arg) -> o.setMoney((java.math.BigDecimal) arg));

setMap.put("userId", (o, arg) -> o.setUserId((java.lang.Long) arg));

setMap.put("birthday", (o, arg) -> o.setBirthday((java.util.Date) arg));

setMap.put("name", (o, arg) -> o.setName((java.lang.String) arg));

}
public Object get(Object o, String methodName){
com.sparrow.facade.beans.Target target=(com.sparrow.facade.beans.Target)o;return getMap.get(methodName).apply(target,methodName);}
public void set(Object o, String methodName,Object arg){
com.sparrow.facade.beans.Target target=(com.sparrow.facade.beans.Target)o;
 setMap.get(methodName).accept(target,arg);}
}
2023-06-17 22:42:46.221 TRACE_ID DEBUG main Generator4MethodAccessor package com.sparrow.accessMethod;
import com.sparrow.cg.MethodAccessor;
import java.util.HashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;

 public class UserMethodAccess  implements MethodAccessor{
private static Map<String, BiFunction<com.sparrow.json.User, String, Object>> getMap = new HashMap<>();
        private static Map<String, BiConsumer<com.sparrow.json.User, Object>> setMap = new HashMap<>();

static {

getMap.put("extend", (o, r) -> o.getExtend());

getMap.put("userId", (o, r) -> o.getUserId());

getMap.put("parent", (o, r) -> o.getParent());

getMap.put("userName", (o, r) -> o.getUserName());


setMap.put("userName", (o, arg) -> o.setUserName((java.lang.String) arg));

setMap.put("extend", (o, arg) -> o.setExtend((java.util.Map) arg));

setMap.put("userId", (o, arg) -> o.setUserId((java.lang.String) arg));

setMap.put("parent", (o, arg) -> o.setParent((com.sparrow.json.User) arg));

}
public Object get(Object o, String methodName){
com.sparrow.json.User user=(com.sparrow.json.User)o;return getMap.get(methodName).apply(user,methodName);}
public void set(Object o, String methodName,Object arg){
com.sparrow.json.User user=(com.sparrow.json.User)o;
 setMap.get(methodName).accept(user,arg);}
}
2023-06-17 22:42:48.351 TRACE_ID DEBUG main Generator4MethodAccessor package com.sparrow.accessMethod;
import com.sparrow.cg.MethodAccessor;
import java.util.HashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;

 public class User3MethodAccess  implements MethodAccessor{
private static Map<String, BiFunction<com.sparrow.cg.User3, String, Object>> getMap = new HashMap<>();
        private static Map<String, BiConsumer<com.sparrow.cg.User3, Object>> setMap = new HashMap<>();

static {

getMap.put("user", (o, r) -> o.getUser());


setMap.put("user", (o, arg) -> o.setUser((java.lang.String) arg));

}
public Object get(Object o, String methodName){
com.sparrow.cg.User3 user3=(com.sparrow.cg.User3)o;return getMap.get(methodName).apply(user3,methodName);}
public void set(Object o, String methodName,Object arg){
com.sparrow.cg.User3 user3=(com.sparrow.cg.User3)o;
 setMap.get(methodName).accept(user3,arg);}
}
